"use strict";

sap.ui.define("com/uniorg/cf/banking/example/controller/login/Login.controller", ["sap/ui/model/json/JSONModel", "sap/ui/model/Filter", "com/uniorg/cf/banking/example/controller/BaseController"], function (JSONModel, Filter, BaseController) {
	"use strict";

	return BaseController.extend("com.uniorg.cf.banking.example.controller.login.Login", {
		onInit: function onInit() {
			var oJSONModel = new JSONModel("/apiFinTs/getBanks");
			this.getView().setModel(oJSONModel);
			var formModel = new JSONModel();
			this.getView().setModel(formModel, "formModel");
			this._loadInfoData();
		},
		_loadInfoData: function _loadInfoData() {
			this.getView().getModel().loadData("/login");
			this.getView().getModel("formModel").setData({
				user: "",
				pass: "",
				blz: ""
			});
		},
		handleSuggest: function handleSuggest(oEvent) {
			var sTerm = oEvent.getParameter("suggestValue");
			var aFilters = [];
			if (sTerm) {
				aFilters.push(new Filter("name", sap.ui.model.FilterOperator.StartsWith, sTerm));
				aFilters.push(new Filter("blz", sap.ui.model.FilterOperator.StartsWith, sTerm));
			}
			oEvent.getSource().getBinding("suggestionItems").filter([new Filter(aFilters, false)]);
		},
		onLogin: function onLogin(evt) {
			var data = JSON.parse(this.getView().getModel("formModel").getJSON());
			var blz = this.getView().byId('inputBlz').getSelectedKey();
			console.log(blz, data);
			data.blz = blz;
			$.post("/apiFinTs/getAccounts", {
				code: Base64.encode(data.user + ";" + data.pass + ";" + data.blz)
			}, function (data, status) {
				alert("Data: " + data + "\nStatus: " + status);
			});
		}
	});
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRyb2xsZXIvbG9naW4vTG9naW4uY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJvbkluaXQiLCJvSlNPTk1vZGVsIiwiSlNPTk1vZGVsIiwiZ2V0VmlldyIsInNldE1vZGVsIiwiZm9ybU1vZGVsIiwiX2xvYWRJbmZvRGF0YSIsImdldE1vZGVsIiwibG9hZERhdGEiLCJzZXREYXRhIiwidXNlciIsInBhc3MiLCJibHoiLCJoYW5kbGVTdWdnZXN0Iiwib0V2ZW50Iiwic1Rlcm0iLCJnZXRQYXJhbWV0ZXIiLCJhRmlsdGVycyIsInB1c2giLCJGaWx0ZXIiLCJzYXAiLCJ1aSIsIm1vZGVsIiwiRmlsdGVyT3BlcmF0b3IiLCJTdGFydHNXaXRoIiwiZ2V0U291cmNlIiwiZ2V0QmluZGluZyIsImZpbHRlciIsIm9uTG9naW4iLCJldnQiLCJkYXRhIiwiSlNPTiIsInBhcnNlIiwiZ2V0SlNPTiIsImJ5SWQiLCJnZXRTZWxlY3RlZEtleSIsImNvbnNvbGUiLCJsb2ciLCIkIiwicG9zdCIsImNvZGUiLCJCYXNlNjQiLCJlbmNvZGUiLCJzdGF0dXMiLCJhbGVydCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBTUNBLFEsb0JBQVM7QUFDUixPQUFJQyxhQUFhLElBQUlDLFNBQUosQ0FBZSxvQkFBZixDQUFqQjtBQUNBLFFBQUtDLE9BQUwsR0FBZUMsUUFBZixDQUF5QkgsVUFBekI7QUFDQSxPQUFJSSxZQUFZLElBQUlILFNBQUosRUFBaEI7QUFDQSxRQUFLQyxPQUFMLEdBQWVDLFFBQWYsQ0FBeUJDLFNBQXpCLEVBQW9DLFdBQXBDO0FBQ0EsUUFBS0MsYUFBTDtBQUNBLEc7QUFFREEsZSwyQkFBZ0I7QUFDZixRQUFLSCxPQUFMLEdBQWVJLFFBQWYsR0FBMEJDLFFBQTFCLENBQW9DLFFBQXBDO0FBQ0EsUUFBS0wsT0FBTCxHQUFlSSxRQUFmLENBQXlCLFdBQXpCLEVBQXVDRSxPQUF2QyxDQUFnRDtBQUNuQ0MsVUFBTSxFQUQ2QjtBQUVuQ0MsVUFBTSxFQUY2QjtBQUduQ0MsU0FBSztBQUg4QixJQUFoRDtBQUtBLEc7QUFFREMsZSx5QkFBZUMsTSxFQUFTO0FBQ3ZCLE9BQUlDLFFBQVFELE9BQU9FLFlBQVAsQ0FBcUIsY0FBckIsQ0FBWjtBQUNBLE9BQUlDLFdBQVcsRUFBZjtBQUNBLE9BQUtGLEtBQUwsRUFBYTtBQUNaRSxhQUFTQyxJQUFULENBQWUsSUFBSUMsTUFBSixDQUFZLE1BQVosRUFBb0JDLElBQUlDLEVBQUosQ0FBT0MsS0FBUCxDQUFhQyxjQUFiLENBQTRCQyxVQUFoRCxFQUE0RFQsS0FBNUQsQ0FBZjtBQUNBRSxhQUFTQyxJQUFULENBQWUsSUFBSUMsTUFBSixDQUFZLEtBQVosRUFBbUJDLElBQUlDLEVBQUosQ0FBT0MsS0FBUCxDQUFhQyxjQUFiLENBQTRCQyxVQUEvQyxFQUEyRFQsS0FBM0QsQ0FBZjtBQUNBO0FBQ0RELFVBQU9XLFNBQVAsR0FBbUJDLFVBQW5CLENBQStCLGlCQUEvQixFQUFtREMsTUFBbkQsQ0FBMkQsQ0FBQyxJQUFJUixNQUFKLENBQVdGLFFBQVgsRUFBcUIsS0FBckIsQ0FBRCxDQUEzRDtBQUNBLEc7QUFFRFcsUyxtQkFBU0MsRyxFQUFNO0FBQ2QsT0FBSUMsT0FBT0MsS0FBS0MsS0FBTCxDQUFZLEtBQUs3QixPQUFMLEdBQWVJLFFBQWYsQ0FBeUIsV0FBekIsRUFBdUMwQixPQUF2QyxFQUFaLENBQVg7QUFDQSxPQUFJckIsTUFBTSxLQUFLVCxPQUFMLEdBQWUrQixJQUFmLENBQXFCLFVBQXJCLEVBQWtDQyxjQUFsQyxFQUFWO0FBQ0FDLFdBQVFDLEdBQVIsQ0FBYXpCLEdBQWIsRUFBa0JrQixJQUFsQjtBQUNBQSxRQUFLbEIsR0FBTCxHQUFXQSxHQUFYO0FBQ0EwQixLQUFFQyxJQUFGLENBQVEsdUJBQVIsRUFDRTtBQUNDQyxVQUFNQyxPQUFPQyxNQUFQLENBQWVaLEtBQUtwQixJQUFMLEdBQVksR0FBWixHQUFrQm9CLEtBQUtuQixJQUF2QixHQUE4QixHQUE5QixHQUFvQ21CLEtBQUtsQixHQUF4RDtBQURQLElBREYsRUFJRSxVQUFVa0IsSUFBVixFQUFnQmEsTUFBaEIsRUFBeUI7QUFDeEJDLFVBQU8sV0FBV2QsSUFBWCxHQUFrQixZQUFsQixHQUFpQ2EsTUFBeEM7QUFDQSxJQU5IO0FBT0EiLCJmaWxlIjoiY29udHJvbGxlci9sb2dpbi9Mb2dpbi5jb250cm9sbGVyLmpzIiwic291cmNlUm9vdCI6Ii4vc3JjIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IEpTT05Nb2RlbCBmcm9tIFwic2FwL3VpL21vZGVsL2pzb24vSlNPTk1vZGVsXCI7XG5pbXBvcnQgRmlsdGVyIGZyb20gXCJzYXAvdWkvbW9kZWwvRmlsdGVyXCI7XG5pbXBvcnQgQmFzZUNvbnRyb2xsZXIgZnJvbSBcImNvbS91bmlvcmcvY2YvYmFua2luZy9leGFtcGxlL2NvbnRyb2xsZXIvQmFzZUNvbnRyb2xsZXJcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9naW4gZXh0ZW5kcyBCYXNlQ29udHJvbGxlciB7XG5cblx0b25Jbml0KCkge1xuXHRcdHZhciBvSlNPTk1vZGVsID0gbmV3IEpTT05Nb2RlbCggXCIvYXBpRmluVHMvZ2V0QmFua3NcIiApO1xuXHRcdHRoaXMuZ2V0VmlldygpLnNldE1vZGVsKCBvSlNPTk1vZGVsICk7XG5cdFx0dmFyIGZvcm1Nb2RlbCA9IG5ldyBKU09OTW9kZWwoKTtcblx0XHR0aGlzLmdldFZpZXcoKS5zZXRNb2RlbCggZm9ybU1vZGVsLCBcImZvcm1Nb2RlbFwiICk7XG5cdFx0dGhpcy5fbG9hZEluZm9EYXRhKCk7XG5cdH1cblxuXHRfbG9hZEluZm9EYXRhKCkge1xuXHRcdHRoaXMuZ2V0VmlldygpLmdldE1vZGVsKCkubG9hZERhdGEoIFwiL2xvZ2luXCIgKTtcblx0XHR0aGlzLmdldFZpZXcoKS5nZXRNb2RlbCggXCJmb3JtTW9kZWxcIiApLnNldERhdGEoIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVzZXI6IFwiXCIsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRwYXNzOiBcIlwiLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0Ymx6OiBcIlwiXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fSApO1xuXHR9XG5cblx0aGFuZGxlU3VnZ2VzdCggb0V2ZW50ICkge1xuXHRcdGxldCBzVGVybSA9IG9FdmVudC5nZXRQYXJhbWV0ZXIoIFwic3VnZ2VzdFZhbHVlXCIgKTtcblx0XHRsZXQgYUZpbHRlcnMgPSBbXTtcblx0XHRpZiAoIHNUZXJtICkge1xuXHRcdFx0YUZpbHRlcnMucHVzaCggbmV3IEZpbHRlciggXCJuYW1lXCIsIHNhcC51aS5tb2RlbC5GaWx0ZXJPcGVyYXRvci5TdGFydHNXaXRoLCBzVGVybSApICk7XG5cdFx0XHRhRmlsdGVycy5wdXNoKCBuZXcgRmlsdGVyKCBcImJselwiLCBzYXAudWkubW9kZWwuRmlsdGVyT3BlcmF0b3IuU3RhcnRzV2l0aCwgc1Rlcm0gKSApO1xuXHRcdH1cblx0XHRvRXZlbnQuZ2V0U291cmNlKCkuZ2V0QmluZGluZyggXCJzdWdnZXN0aW9uSXRlbXNcIiApLmZpbHRlciggW25ldyBGaWx0ZXIoYUZpbHRlcnMsIGZhbHNlKV0gKTtcblx0fVxuXG5cdG9uTG9naW4oIGV2dCApIHtcblx0XHRsZXQgZGF0YSA9IEpTT04ucGFyc2UoIHRoaXMuZ2V0VmlldygpLmdldE1vZGVsKCBcImZvcm1Nb2RlbFwiICkuZ2V0SlNPTigpICk7XG5cdFx0bGV0IGJseiA9IHRoaXMuZ2V0VmlldygpLmJ5SWQoICdpbnB1dEJseicgKS5nZXRTZWxlY3RlZEtleSgpO1xuXHRcdGNvbnNvbGUubG9nKCBibHosIGRhdGEgKTtcblx0XHRkYXRhLmJseiA9IGJsejtcblx0XHQkLnBvc3QoIFwiL2FwaUZpblRzL2dldEFjY291bnRzXCIsXG5cdFx0XHRcdHtcblx0XHRcdFx0XHRjb2RlOiBCYXNlNjQuZW5jb2RlKCBkYXRhLnVzZXIgKyBcIjtcIiArIGRhdGEucGFzcyArIFwiO1wiICsgZGF0YS5ibHogKVxuXHRcdFx0XHR9LFxuXHRcdFx0XHRmdW5jdGlvbiggZGF0YSwgc3RhdHVzICkge1xuXHRcdFx0XHRcdGFsZXJ0KCBcIkRhdGE6IFwiICsgZGF0YSArIFwiXFxuU3RhdHVzOiBcIiArIHN0YXR1cyApO1xuXHRcdFx0XHR9ICk7XG5cdH1cbn0iXX0=